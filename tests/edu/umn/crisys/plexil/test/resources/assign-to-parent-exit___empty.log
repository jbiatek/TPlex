
[PlexilExec:printPlan]
Root{
 State: Root (id_23[au](EXECUTING): state) (0)
 AncestorEndCondition: Boolean constant false (id_29[au](0): boolean)
 AncestorExitCondition: Boolean constant false (id_29[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_31[au](1): boolean)
 SkipCondition: Boolean constant false (id_29[au](0): boolean)
 StartCondition: Boolean constant true (id_31[au](1): boolean)
 EndCondition: (id_105[au](0): (id_109[au](0): (Kid (id_36[au](EXECUTING): state) == NodeStateValue (id_107[au](FINISHED): state))))
 ExitCondition: step_failed (id_33[au](1): boolean)
 InvariantCondition: Boolean constant true (id_31[au](1): boolean)
 PreCondition: Boolean constant true (id_31[au](1): boolean)
 PostCondition: Boolean constant true (id_31[au](1): boolean)
 RepeatCondition: Boolean constant false (id_29[au](0): boolean)
 ActionCompleteCondition: (id_94[iu](UNKNOWN): childrenWaitingOrFinished(0:1))
 step_failed: step_failed (id_33[au](1): boolean)
  Kid{
   State: Kid (id_36[au](EXECUTING): state) (0)
   AncestorEndCondition: (id_105[au](0): (id_109[au](0): (Kid (id_36[au](EXECUTING): state) == NodeStateValue (id_107[au](FINISHED): state))))
   AncestorExitCondition: step_failed (id_33[au](1): boolean)
   AncestorInvariantCondition: Boolean constant true (id_31[au](1): boolean)
   SkipCondition: Boolean constant false (id_29[au](0): boolean)
   StartCondition: Boolean constant true (id_31[au](1): boolean)
   EndCondition: Boolean constant true (id_31[au](1): boolean)
   ExitCondition: Boolean constant false (id_29[au](0): boolean)
   InvariantCondition: Boolean constant true (id_31[au](1): boolean)
   PreCondition: Boolean constant true (id_31[au](1): boolean)
   PostCondition: Boolean constant true (id_31[au](1): boolean)
   RepeatCondition: Boolean constant false (id_29[au](0): boolean)
   ActionCompleteCondition: Kid ack (id_114[au](1): boolean)
   AbortCompleteCondition: Kid abortComplete (id_116[iu](UNKNOWN): boolean)
   step_failed: step_failed (id_33[au](1): boolean)
  }
}

[PlexilExec:printPlan]
Root{
 State: Root (id_23[au](FAILING): state) (0)
 AncestorEndCondition: Boolean constant false (id_29[au](0): boolean)
 AncestorExitCondition: Boolean constant false (id_29[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_31[au](1): boolean)
 SkipCondition: Boolean constant false (id_29[au](0): boolean)
 StartCondition: Boolean constant true (id_31[au](1): boolean)
 EndCondition: (id_105[au](0): (id_109[au](0): (Kid (id_36[au](FAILING): state) == NodeStateValue (id_107[au](FINISHED): state))))
 ExitCondition: step_failed (id_33[au](0): boolean)
 InvariantCondition: Boolean constant true (id_31[au](1): boolean)
 PreCondition: Boolean constant true (id_31[au](1): boolean)
 PostCondition: Boolean constant true (id_31[au](1): boolean)
 RepeatCondition: Boolean constant false (id_29[au](0): boolean)
 ActionCompleteCondition: (id_94[au](0): childrenWaitingOrFinished(0:1))
 step_failed: step_failed (id_33[au](0): boolean)
  Kid{
   State: Kid (id_36[au](FAILING): state) (0)
   AncestorEndCondition: (id_105[au](0): (id_109[au](0): (Kid (id_36[au](FAILING): state) == NodeStateValue (id_107[au](FINISHED): state))))
   AncestorExitCondition: step_failed (id_33[au](0): boolean)
   AncestorInvariantCondition: Boolean constant true (id_31[au](1): boolean)
   SkipCondition: Boolean constant false (id_29[au](0): boolean)
   StartCondition: Boolean constant true (id_31[au](1): boolean)
   EndCondition: Boolean constant true (id_31[au](1): boolean)
   ExitCondition: Boolean constant false (id_29[au](0): boolean)
   InvariantCondition: Boolean constant true (id_31[au](1): boolean)
   PreCondition: Boolean constant true (id_31[au](1): boolean)
   PostCondition: Boolean constant true (id_31[au](1): boolean)
   RepeatCondition: Boolean constant false (id_29[au](0): boolean)
   ActionCompleteCondition: Kid ack (id_114[iu](1): boolean)
   AbortCompleteCondition: Kid abortComplete (id_116[au](1): boolean)
   step_failed: step_failed (id_33[au](0): boolean)
  }
}

[PlexilExec:printPlan]
Root{
 State: Root (id_23[au](FINISHED): state) (0)
 Outcome: Root (id_25[au](INTERRUPTED): outcome)
 Failure type: Root (id_27[au](EXITED): failure)
 step_failed: step_failed (id_33[iu](0): boolean)
  Kid{
   State: Kid (id_36[au](FINISHED): state) (0)
   Outcome: Kid (id_38[au](INTERRUPTED): outcome)
   Failure type: Kid (id_40[au](PARENT_EXITED): failure)
   step_failed: step_failed (id_33[iu](0): boolean)
  }
}


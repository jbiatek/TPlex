
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[Test:testOutput]Creating initial state x() = 0
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:step][1:0] State change queue: Wrapper0 
[PlexilExec:step][1:0:0] Transitioning node Wrapper0 from INACTIVE to WAITING
[PlexilExec:step][1:1] State change queue: Wrapper0 
[PlexilExec:step][1:1:0] Transitioning node Wrapper0 from WAITING to EXECUTING
[Test:testOutput]Registering change lookup for x()
[Test:testOutput]Looking up immediately x()
[Test:testOutput]Returning value 0
[PlexilExec:step][1:2] State change queue: Wrapper1 
[PlexilExec:step][1:2:0] Transitioning node Wrapper1 from INACTIVE to WAITING
[PlexilExec:step][1:3] State change queue: Wrapper1 
[PlexilExec:step][1:3:0] Transitioning node Wrapper1 from WAITING to EXECUTING
[PlexilExec:step][1:4] State change queue: Wrapper2 
[PlexilExec:step][1:4:0] Transitioning node Wrapper2 from INACTIVE to WAITING
[PlexilExec:step][1:5] State change queue: Wrapper2 
[PlexilExec:step][1:5:0] Transitioning node Wrapper2 from WAITING to EXECUTING
[PlexilExec:step][1:6] State change queue: FooCall 
[PlexilExec:step][1:6:0] Transitioning node FooCall from INACTIVE to WAITING
[PlexilExec:step][1:7] State change queue: FooCall 
[PlexilExec:step][1:7:0] Transitioning node FooCall from WAITING to EXECUTING
[Test:testOutput]Executing foo() into noId with ack FooCall command_handle (id_288[au](UNKNOWN): command_handle)
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
Wrapper0{
 State: Wrapper0 (id_47[au](EXECUTING): state) (0)
 AncestorEndCondition: Boolean constant false (id_53[au](0): boolean)
 AncestorExitCondition: Boolean constant false (id_53[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_55[au](1): boolean)
 SkipCondition: Boolean constant false (id_53[au](0): boolean)
 StartCondition: Boolean constant true (id_55[au](1): boolean)
 EndCondition: (id_213[au](0): ((id_215[au](0): LookupOnChange(x(), Real constant 0 (id_219[au](0): real))) != IntegerValue (id_221[au](0): int)))
 ExitCondition: Boolean constant false (id_53[au](0): boolean)
 InvariantCondition: (id_200[au](UNKNOWN): ((id_202[au](UNKNOWN): !(id_204[au](UNKNOWN): ((id_206[au](UNKNOWN): (id_210[au](UNKNOWN): (Wrapper1 (id_60[au](UNKNOWN): outcome) == NodeOutcomeValue (id_208[au](FAILURE): outcome)))))))))
 PreCondition: Boolean constant true (id_55[au](1): boolean)
 PostCondition: Boolean constant true (id_55[au](1): boolean)
 RepeatCondition: Boolean constant false (id_53[au](0): boolean)
 ActionCompleteCondition: (id_190[iu](UNKNOWN): childrenWaitingOrFinished(0:1))
  Wrapper1{
   State: Wrapper1 (id_58[au](EXECUTING): state) (0)
   AncestorEndCondition: (id_213[au](0): ((id_215[au](0): LookupOnChange(x(), Real constant 0 (id_219[au](0): real))) != IntegerValue (id_221[au](0): int)))
   AncestorExitCondition: Boolean constant false (id_53[au](0): boolean)
   AncestorInvariantCondition: (id_200[au](UNKNOWN): ((id_202[au](UNKNOWN): !(id_204[au](UNKNOWN): ((id_206[au](UNKNOWN): (id_210[au](UNKNOWN): (Wrapper1 (id_60[au](UNKNOWN): outcome) == NodeOutcomeValue (id_208[au](FAILURE): outcome)))))))))
   SkipCondition: Boolean constant false (id_53[au](0): boolean)
   StartCondition: Boolean constant true (id_55[au](1): boolean)
   EndCondition: (id_230[au](0): childrenFinished(0:1))
   ExitCondition: Boolean constant false (id_53[au](0): boolean)
   InvariantCondition: (id_235[au](UNKNOWN): ((id_237[au](UNKNOWN): !(id_239[au](UNKNOWN): ((id_241[au](UNKNOWN): (id_245[au](UNKNOWN): (Wrapper2 (id_67[au](UNKNOWN): outcome) == NodeOutcomeValue (id_243[au](FAILURE): outcome)))))))))
   PreCondition: Boolean constant true (id_55[au](1): boolean)
   PostCondition: Boolean constant true (id_55[au](1): boolean)
   RepeatCondition: Boolean constant false (id_53[au](0): boolean)
   ActionCompleteCondition: (id_225[iu](UNKNOWN): childrenWaitingOrFinished(0:1))
    Wrapper2{
     State: Wrapper2 (id_65[au](EXECUTING): state) (0)
     AncestorEndCondition: (id_248[au](0): ((id_213[au](0): ((id_215[au](0): LookupOnChange(x(), Real constant 0 (id_219[au](0): real))) != IntegerValue (id_221[au](0): int))) || (id_230[au](0): childrenFinished(0:1))))
     AncestorExitCondition: (id_250[au](0): (Boolean constant false (id_53[au](0): boolean) || Boolean constant false (id_53[au](0): boolean)))
     AncestorInvariantCondition: (id_252[au](UNKNOWN): ((id_200[au](UNKNOWN): ((id_202[au](UNKNOWN): !(id_204[au](UNKNOWN): ((id_206[au](UNKNOWN): (id_210[au](UNKNOWN): (Wrapper1 (id_60[au](UNKNOWN): outcome) == NodeOutcomeValue (id_208[au](FAILURE): outcome))))))))) && (id_235[au](UNKNOWN): ((id_237[au](UNKNOWN): !(id_239[au](UNKNOWN): ((id_241[au](UNKNOWN): (id_245[au](UNKNOWN): (Wrapper2 (id_67[au](UNKNOWN): outcome) == NodeOutcomeValue (id_243[au](FAILURE): outcome)))))))))))
     SkipCondition: Boolean constant false (id_53[au](0): boolean)
     StartCondition: Boolean constant true (id_55[au](1): boolean)
     EndCondition: (id_261[au](0): childrenFinished(0:1))
     ExitCondition: Boolean constant false (id_53[au](0): boolean)
     InvariantCondition: (id_266[au](UNKNOWN): ((id_268[au](UNKNOWN): !(id_270[au](UNKNOWN): ((id_272[au](UNKNOWN): (id_276[au](UNKNOWN): (FooCall (id_74[au](UNKNOWN): outcome) == NodeOutcomeValue (id_274[au](FAILURE): outcome)))))))))
     PreCondition: Boolean constant true (id_55[au](1): boolean)
     PostCondition: Boolean constant true (id_55[au](1): boolean)
     RepeatCondition: Boolean constant false (id_53[au](0): boolean)
     ActionCompleteCondition: (id_256[iu](UNKNOWN): childrenWaitingOrFinished(0:1))
      FooCall{
       State: FooCall (id_72[au](EXECUTING): state) (0)
       AncestorEndCondition: (id_279[au](0): ((id_248[au](0): ((id_213[au](0): ((id_215[au](0): LookupOnChange(x(), Real constant 0 (id_219[au](0): real))) != IntegerValue (id_221[au](0): int))) || (id_230[au](0): childrenFinished(0:1)))) || (id_261[au](0): childrenFinished(0:1))))
       AncestorExitCondition: (id_281[au](0): ((id_250[au](0): (Boolean constant false (id_53[au](0): boolean) || Boolean constant false (id_53[au](0): boolean))) || Boolean constant false (id_53[au](0): boolean)))
       AncestorInvariantCondition: (id_283[au](UNKNOWN): ((id_252[au](UNKNOWN): ((id_200[au](UNKNOWN): ((id_202[au](UNKNOWN): !(id_204[au](UNKNOWN): ((id_206[au](UNKNOWN): (id_210[au](UNKNOWN): (Wrapper1 (id_60[au](UNKNOWN): outcome) == NodeOutcomeValue (id_208[au](FAILURE): outcome))))))))) && (id_235[au](UNKNOWN): ((id_237[au](UNKNOWN): !(id_239[au](UNKNOWN): ((id_241[au](UNKNOWN): (id_245[au](UNKNOWN): (Wrapper2 (id_67[au](UNKNOWN): outcome) == NodeOutcomeValue (id_243[au](FAILURE): outcome))))))))))) && (id_266[au](UNKNOWN): ((id_268[au](UNKNOWN): !(id_270[au](UNKNOWN): ((id_272[au](UNKNOWN): (id_276[au](UNKNOWN): (FooCall (id_74[au](UNKNOWN): outcome) == NodeOutcomeValue (id_274[au](FAILURE): outcome)))))))))))
       SkipCondition: Boolean constant false (id_53[au](0): boolean)
       StartCondition: Boolean constant true (id_55[au](1): boolean)
       EndCondition: Boolean constant true (id_55[au](1): boolean)
       ExitCondition: Boolean constant false (id_53[au](0): boolean)
       InvariantCondition: Boolean constant true (id_55[au](1): boolean)
       PreCondition: Boolean constant true (id_55[au](1): boolean)
       PostCondition: Boolean constant true (id_55[au](1): boolean)
       RepeatCondition: BooleanValue (id_298[iu](1): boolean)
       ActionCompleteCondition: (id_292[iu](UNKNOWN): isknown(FooCall command_handle (id_288[au](UNKNOWN): command_handle)))
       AbortCompleteCondition: FooCall abortComplete (id_290[au](UNKNOWN): boolean)
       Command handle: FooCall command_handle (id_288[au](UNKNOWN): command_handle)
      }
    }
  }
}

[Test:testOutput]Sending command ACK foo() = (string)COMMAND_SUCCESS
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:step][2:0] State change queue: FooCall 
[PlexilExec:step][2:0:0] Transitioning node FooCall from EXECUTING to FINISHING
[PlexilExec:step][2:1] State change queue: FooCall 
[PlexilExec:step][2:1:0] Transitioning node FooCall from FINISHING to ITERATION_ENDED
[PlexilExec:step][2:2] State change queue: FooCall 
[PlexilExec:step][2:2:0] Transitioning node FooCall from ITERATION_ENDED to WAITING
[PlexilExec:step][2:3] State change queue: FooCall 
[PlexilExec:step][2:3:0] Transitioning node FooCall from WAITING to EXECUTING
[Test:testOutput]Executing foo() into noId with ack FooCall command_handle (id_288[au](UNKNOWN): command_handle)
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
Wrapper0{
 State: Wrapper0 (id_47[au](EXECUTING): state) (0)
 AncestorEndCondition: Boolean constant false (id_53[au](0): boolean)
 AncestorExitCondition: Boolean constant false (id_53[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_55[au](1): boolean)
 SkipCondition: Boolean constant false (id_53[au](0): boolean)
 StartCondition: Boolean constant true (id_55[au](1): boolean)
 EndCondition: (id_213[au](0): ((id_215[au](0): LookupOnChange(x(), Real constant 0 (id_219[au](0): real))) != IntegerValue (id_221[au](0): int)))
 ExitCondition: Boolean constant false (id_53[au](0): boolean)
 InvariantCondition: (id_200[au](UNKNOWN): ((id_202[au](UNKNOWN): !(id_204[au](UNKNOWN): ((id_206[au](UNKNOWN): (id_210[au](UNKNOWN): (Wrapper1 (id_60[au](UNKNOWN): outcome) == NodeOutcomeValue (id_208[au](FAILURE): outcome)))))))))
 PreCondition: Boolean constant true (id_55[au](1): boolean)
 PostCondition: Boolean constant true (id_55[au](1): boolean)
 RepeatCondition: Boolean constant false (id_53[au](0): boolean)
 ActionCompleteCondition: (id_190[iu](UNKNOWN): childrenWaitingOrFinished(0:1))
  Wrapper1{
   State: Wrapper1 (id_58[au](EXECUTING): state) (0)
   AncestorEndCondition: (id_213[au](0): ((id_215[au](0): LookupOnChange(x(), Real constant 0 (id_219[au](0): real))) != IntegerValue (id_221[au](0): int)))
   AncestorExitCondition: Boolean constant false (id_53[au](0): boolean)
   AncestorInvariantCondition: (id_200[au](UNKNOWN): ((id_202[au](UNKNOWN): !(id_204[au](UNKNOWN): ((id_206[au](UNKNOWN): (id_210[au](UNKNOWN): (Wrapper1 (id_60[au](UNKNOWN): outcome) == NodeOutcomeValue (id_208[au](FAILURE): outcome)))))))))
   SkipCondition: Boolean constant false (id_53[au](0): boolean)
   StartCondition: Boolean constant true (id_55[au](1): boolean)
   EndCondition: (id_230[au](0): childrenFinished(0:1))
   ExitCondition: Boolean constant false (id_53[au](0): boolean)
   InvariantCondition: (id_235[au](UNKNOWN): ((id_237[au](UNKNOWN): !(id_239[au](UNKNOWN): ((id_241[au](UNKNOWN): (id_245[au](UNKNOWN): (Wrapper2 (id_67[au](UNKNOWN): outcome) == NodeOutcomeValue (id_243[au](FAILURE): outcome)))))))))
   PreCondition: Boolean constant true (id_55[au](1): boolean)
   PostCondition: Boolean constant true (id_55[au](1): boolean)
   RepeatCondition: Boolean constant false (id_53[au](0): boolean)
   ActionCompleteCondition: (id_225[iu](UNKNOWN): childrenWaitingOrFinished(0:1))
    Wrapper2{
     State: Wrapper2 (id_65[au](EXECUTING): state) (0)
     AncestorEndCondition: (id_248[au](0): ((id_213[au](0): ((id_215[au](0): LookupOnChange(x(), Real constant 0 (id_219[au](0): real))) != IntegerValue (id_221[au](0): int))) || (id_230[au](0): childrenFinished(0:1))))
     AncestorExitCondition: (id_250[au](0): (Boolean constant false (id_53[au](0): boolean) || Boolean constant false (id_53[au](0): boolean)))
     AncestorInvariantCondition: (id_252[au](UNKNOWN): ((id_200[au](UNKNOWN): ((id_202[au](UNKNOWN): !(id_204[au](UNKNOWN): ((id_206[au](UNKNOWN): (id_210[au](UNKNOWN): (Wrapper1 (id_60[au](UNKNOWN): outcome) == NodeOutcomeValue (id_208[au](FAILURE): outcome))))))))) && (id_235[au](UNKNOWN): ((id_237[au](UNKNOWN): !(id_239[au](UNKNOWN): ((id_241[au](UNKNOWN): (id_245[au](UNKNOWN): (Wrapper2 (id_67[au](UNKNOWN): outcome) == NodeOutcomeValue (id_243[au](FAILURE): outcome)))))))))))
     SkipCondition: Boolean constant false (id_53[au](0): boolean)
     StartCondition: Boolean constant true (id_55[au](1): boolean)
     EndCondition: (id_261[au](0): childrenFinished(0:1))
     ExitCondition: Boolean constant false (id_53[au](0): boolean)
     InvariantCondition: (id_266[au](UNKNOWN): ((id_268[au](UNKNOWN): !(id_270[au](UNKNOWN): ((id_272[au](UNKNOWN): (id_276[au](UNKNOWN): (FooCall (id_74[au](UNKNOWN): outcome) == NodeOutcomeValue (id_274[au](FAILURE): outcome)))))))))
     PreCondition: Boolean constant true (id_55[au](1): boolean)
     PostCondition: Boolean constant true (id_55[au](1): boolean)
     RepeatCondition: Boolean constant false (id_53[au](0): boolean)
     ActionCompleteCondition: (id_256[iu](UNKNOWN): childrenWaitingOrFinished(0:1))
      FooCall{
       State: FooCall (id_72[au](EXECUTING): state) (0)
       AncestorEndCondition: (id_279[au](0): ((id_248[au](0): ((id_213[au](0): ((id_215[au](0): LookupOnChange(x(), Real constant 0 (id_219[au](0): real))) != IntegerValue (id_221[au](0): int))) || (id_230[au](0): childrenFinished(0:1)))) || (id_261[au](0): childrenFinished(0:1))))
       AncestorExitCondition: (id_281[au](0): ((id_250[au](0): (Boolean constant false (id_53[au](0): boolean) || Boolean constant false (id_53[au](0): boolean))) || Boolean constant false (id_53[au](0): boolean)))
       AncestorInvariantCondition: (id_283[au](UNKNOWN): ((id_252[au](UNKNOWN): ((id_200[au](UNKNOWN): ((id_202[au](UNKNOWN): !(id_204[au](UNKNOWN): ((id_206[au](UNKNOWN): (id_210[au](UNKNOWN): (Wrapper1 (id_60[au](UNKNOWN): outcome) == NodeOutcomeValue (id_208[au](FAILURE): outcome))))))))) && (id_235[au](UNKNOWN): ((id_237[au](UNKNOWN): !(id_239[au](UNKNOWN): ((id_241[au](UNKNOWN): (id_245[au](UNKNOWN): (Wrapper2 (id_67[au](UNKNOWN): outcome) == NodeOutcomeValue (id_243[au](FAILURE): outcome))))))))))) && (id_266[au](UNKNOWN): ((id_268[au](UNKNOWN): !(id_270[au](UNKNOWN): ((id_272[au](UNKNOWN): (id_276[au](UNKNOWN): (FooCall (id_74[au](UNKNOWN): outcome) == NodeOutcomeValue (id_274[au](FAILURE): outcome)))))))))))
       SkipCondition: Boolean constant false (id_53[au](0): boolean)
       StartCondition: Boolean constant true (id_55[au](1): boolean)
       EndCondition: Boolean constant true (id_55[au](1): boolean)
       ExitCondition: Boolean constant false (id_53[au](0): boolean)
       InvariantCondition: Boolean constant true (id_55[au](1): boolean)
       PreCondition: Boolean constant true (id_55[au](1): boolean)
       PostCondition: Boolean constant true (id_55[au](1): boolean)
       RepeatCondition: BooleanValue (id_298[iu](1): boolean)
       ActionCompleteCondition: (id_292[iu](UNKNOWN): isknown(FooCall command_handle (id_288[au](UNKNOWN): command_handle)))
       AbortCompleteCondition: FooCall abortComplete (id_290[au](UNKNOWN): boolean)
       Command handle: FooCall command_handle (id_288[au](UNKNOWN): command_handle)
      }
    }
  }
}

[Test:testOutput]Processing event: x() = 1
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 3
[PlexilExec:step][3:0] State change queue: FooCall Wrapper0 
[PlexilExec:step][3:0:0] Transitioning node FooCall from EXECUTING to FINISHING
[PlexilExec:step][3:0:1] Transitioning node Wrapper0 from EXECUTING to FINISHING
[PlexilExec:cycle]==>End cycle 3
[PlexilExec:printPlan]
Wrapper0{
 State: Wrapper0 (id_47[au](FINISHING): state) (0)
 AncestorEndCondition: Boolean constant false (id_53[au](0): boolean)
 AncestorExitCondition: Boolean constant false (id_53[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_55[au](1): boolean)
 SkipCondition: Boolean constant false (id_53[au](0): boolean)
 StartCondition: Boolean constant true (id_55[au](1): boolean)
 EndCondition: (id_213[au](1): ((id_215[au](1): LookupOnChange(x(), Real constant 0 (id_219[au](0): real))) != IntegerValue (id_221[au](0): int)))
 ExitCondition: Boolean constant false (id_53[au](0): boolean)
 InvariantCondition: (id_200[au](UNKNOWN): ((id_202[au](UNKNOWN): !(id_204[au](UNKNOWN): ((id_206[au](UNKNOWN): (id_210[au](UNKNOWN): (Wrapper1 (id_60[au](UNKNOWN): outcome) == NodeOutcomeValue (id_208[au](FAILURE): outcome)))))))))
 PreCondition: Boolean constant true (id_55[au](1): boolean)
 PostCondition: Boolean constant true (id_55[au](1): boolean)
 RepeatCondition: Boolean constant false (id_53[au](0): boolean)
 ActionCompleteCondition: (id_190[au](0): childrenWaitingOrFinished(0:1))
  Wrapper1{
   State: Wrapper1 (id_58[au](EXECUTING): state) (0)
   AncestorEndCondition: (id_213[au](1): ((id_215[au](1): LookupOnChange(x(), Real constant 0 (id_219[au](0): real))) != IntegerValue (id_221[au](0): int)))
   AncestorExitCondition: Boolean constant false (id_53[au](0): boolean)
   AncestorInvariantCondition: (id_200[au](UNKNOWN): ((id_202[au](UNKNOWN): !(id_204[au](UNKNOWN): ((id_206[au](UNKNOWN): (id_210[au](UNKNOWN): (Wrapper1 (id_60[au](UNKNOWN): outcome) == NodeOutcomeValue (id_208[au](FAILURE): outcome)))))))))
   SkipCondition: Boolean constant false (id_53[au](0): boolean)
   StartCondition: Boolean constant true (id_55[au](1): boolean)
   EndCondition: (id_230[au](0): childrenFinished(0:1))
   ExitCondition: Boolean constant false (id_53[au](0): boolean)
   InvariantCondition: (id_235[au](UNKNOWN): ((id_237[au](UNKNOWN): !(id_239[au](UNKNOWN): ((id_241[au](UNKNOWN): (id_245[au](UNKNOWN): (Wrapper2 (id_67[au](UNKNOWN): outcome) == NodeOutcomeValue (id_243[au](FAILURE): outcome)))))))))
   PreCondition: Boolean constant true (id_55[au](1): boolean)
   PostCondition: Boolean constant true (id_55[au](1): boolean)
   RepeatCondition: Boolean constant false (id_53[au](0): boolean)
   ActionCompleteCondition: (id_225[iu](UNKNOWN): childrenWaitingOrFinished(0:1))
    Wrapper2{
     State: Wrapper2 (id_65[au](EXECUTING): state) (0)
     AncestorEndCondition: (id_248[au](1): ((id_213[au](1): ((id_215[au](1): LookupOnChange(x(), Real constant 0 (id_219[au](0): real))) != IntegerValue (id_221[au](0): int))) || (id_230[au](0): childrenFinished(0:1))))
     AncestorExitCondition: (id_250[au](0): (Boolean constant false (id_53[au](0): boolean) || Boolean constant false (id_53[au](0): boolean)))
     AncestorInvariantCondition: (id_252[au](UNKNOWN): ((id_200[au](UNKNOWN): ((id_202[au](UNKNOWN): !(id_204[au](UNKNOWN): ((id_206[au](UNKNOWN): (id_210[au](UNKNOWN): (Wrapper1 (id_60[au](UNKNOWN): outcome) == NodeOutcomeValue (id_208[au](FAILURE): outcome))))))))) && (id_235[au](UNKNOWN): ((id_237[au](UNKNOWN): !(id_239[au](UNKNOWN): ((id_241[au](UNKNOWN): (id_245[au](UNKNOWN): (Wrapper2 (id_67[au](UNKNOWN): outcome) == NodeOutcomeValue (id_243[au](FAILURE): outcome)))))))))))
     SkipCondition: Boolean constant false (id_53[au](0): boolean)
     StartCondition: Boolean constant true (id_55[au](1): boolean)
     EndCondition: (id_261[au](0): childrenFinished(0:1))
     ExitCondition: Boolean constant false (id_53[au](0): boolean)
     InvariantCondition: (id_266[au](UNKNOWN): ((id_268[au](UNKNOWN): !(id_270[au](UNKNOWN): ((id_272[au](UNKNOWN): (id_276[au](UNKNOWN): (FooCall (id_74[au](UNKNOWN): outcome) == NodeOutcomeValue (id_274[au](FAILURE): outcome)))))))))
     PreCondition: Boolean constant true (id_55[au](1): boolean)
     PostCondition: Boolean constant true (id_55[au](1): boolean)
     RepeatCondition: Boolean constant false (id_53[au](0): boolean)
     ActionCompleteCondition: (id_256[iu](UNKNOWN): childrenWaitingOrFinished(0:1))
      FooCall{
       State: FooCall (id_72[au](FINISHING): state) (0)
       AncestorEndCondition: (id_279[au](1): ((id_248[au](1): ((id_213[au](1): ((id_215[au](1): LookupOnChange(x(), Real constant 0 (id_219[au](0): real))) != IntegerValue (id_221[au](0): int))) || (id_230[au](0): childrenFinished(0:1)))) || (id_261[au](0): childrenFinished(0:1))))
       AncestorExitCondition: (id_281[au](0): ((id_250[au](0): (Boolean constant false (id_53[au](0): boolean) || Boolean constant false (id_53[au](0): boolean))) || Boolean constant false (id_53[au](0): boolean)))
       AncestorInvariantCondition: (id_283[au](UNKNOWN): ((id_252[au](UNKNOWN): ((id_200[au](UNKNOWN): ((id_202[au](UNKNOWN): !(id_204[au](UNKNOWN): ((id_206[au](UNKNOWN): (id_210[au](UNKNOWN): (Wrapper1 (id_60[au](UNKNOWN): outcome) == NodeOutcomeValue (id_208[au](FAILURE): outcome))))))))) && (id_235[au](UNKNOWN): ((id_237[au](UNKNOWN): !(id_239[au](UNKNOWN): ((id_241[au](UNKNOWN): (id_245[au](UNKNOWN): (Wrapper2 (id_67[au](UNKNOWN): outcome) == NodeOutcomeValue (id_243[au](FAILURE): outcome))))))))))) && (id_266[au](UNKNOWN): ((id_268[au](UNKNOWN): !(id_270[au](UNKNOWN): ((id_272[au](UNKNOWN): (id_276[au](UNKNOWN): (FooCall (id_74[au](UNKNOWN): outcome) == NodeOutcomeValue (id_274[au](FAILURE): outcome)))))))))))
       SkipCondition: Boolean constant false (id_53[au](0): boolean)
       StartCondition: Boolean constant true (id_55[au](1): boolean)
       EndCondition: Boolean constant true (id_55[au](1): boolean)
       ExitCondition: Boolean constant false (id_53[au](0): boolean)
       InvariantCondition: Boolean constant true (id_55[au](1): boolean)
       PreCondition: Boolean constant true (id_55[au](1): boolean)
       PostCondition: Boolean constant true (id_55[au](1): boolean)
       RepeatCondition: BooleanValue (id_298[iu](1): boolean)
       ActionCompleteCondition: (id_292[au](0): isknown(FooCall command_handle (id_288[au](UNKNOWN): command_handle)))
       AbortCompleteCondition: FooCall abortComplete (id_290[au](UNKNOWN): boolean)
       Command handle: FooCall command_handle (id_288[au](UNKNOWN): command_handle)
      }
    }
  }
}

[Test:testOutput]Sending command ACK foo() = (string)COMMAND_SUCCESS
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 4
[PlexilExec:step][4:0] State change queue: FooCall 
[PlexilExec:step][4:0:0] Transitioning node FooCall from FINISHING to ITERATION_ENDED
[PlexilExec:step][4:1] State change queue: FooCall 
[PlexilExec:step][4:1:0] Transitioning node FooCall from ITERATION_ENDED to FINISHED
[Node:outcome]Outcome of 'FooCall' is SUCCESS
[PlexilExec:step][4:2] State change queue: Wrapper2 
[PlexilExec:step][4:2:0] Transitioning node Wrapper2 from EXECUTING to FINISHING
[PlexilExec:step][4:3] State change queue: Wrapper2 
[PlexilExec:step][4:3:0] Transitioning node Wrapper2 from FINISHING to ITERATION_ENDED
[PlexilExec:step][4:4] State change queue: Wrapper2 
[PlexilExec:step][4:4:0] Transitioning node Wrapper2 from ITERATION_ENDED to FINISHED
[Node:outcome]Outcome of 'Wrapper2' is SUCCESS
[PlexilExec:step][4:5] State change queue: Wrapper1 
[PlexilExec:step][4:5:0] Transitioning node Wrapper1 from EXECUTING to FINISHING
[PlexilExec:step][4:6] State change queue: Wrapper1 
[PlexilExec:step][4:6:0] Transitioning node Wrapper1 from FINISHING to ITERATION_ENDED
[PlexilExec:step][4:7] State change queue: Wrapper1 
[PlexilExec:step][4:7:0] Transitioning node Wrapper1 from ITERATION_ENDED to FINISHED
[Node:outcome]Outcome of 'Wrapper1' is SUCCESS
[PlexilExec:step][4:8] State change queue: Wrapper0 
[PlexilExec:step][4:8:0] Transitioning node Wrapper0 from FINISHING to ITERATION_ENDED
[PlexilExec:step][4:9] State change queue: Wrapper0 
[PlexilExec:step][4:9:0] Transitioning node Wrapper0 from ITERATION_ENDED to FINISHED
[Node:outcome]Outcome of 'Wrapper0' is SUCCESS
[PlexilExec:cycle]==>End cycle 4
[PlexilExec:printPlan]
Wrapper0{
 State: Wrapper0 (id_47[au](FINISHED): state) (0)
 Outcome: Wrapper0 (id_49[au](SUCCESS): outcome)
  Wrapper1{
   State: Wrapper1 (id_58[au](FINISHED): state) (0)
   Outcome: Wrapper1 (id_60[au](SUCCESS): outcome)
    Wrapper2{
     State: Wrapper2 (id_65[au](FINISHED): state) (0)
     Outcome: Wrapper2 (id_67[au](SUCCESS): outcome)
      FooCall{
       State: FooCall (id_72[au](FINISHED): state) (0)
       Outcome: FooCall (id_74[au](SUCCESS): outcome)
       Command handle: FooCall command_handle (id_288[iu](COMMAND_SUCCESS): command_handle)
      }
    }
  }
}



[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:step][1:0] State change queue: Root 
[PlexilExec:step][1:0:0] Transitioning node Root from INACTIVE to WAITING
[PlexilExec:step][1:1] State change queue: Root 
[PlexilExec:step][1:1:0] Transitioning node Root from WAITING to EXECUTING
[Test:testOutput]Assigning 'a4(0)' ((id_58[au](UNKNOWN): ArrayElement: a4 (id_31[au](Array: [<unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>]): array)[IntegerValue (id_62[au](0): int)])) to 5
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
Root{
 State: Root (id_21[au](EXECUTING): state) (0)
 AncestorEndCondition: Boolean constant false (id_27[au](0): boolean)
 AncestorExitCondition: Boolean constant false (id_27[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_29[au](1): boolean)
 SkipCondition: Boolean constant false (id_27[au](0): boolean)
 StartCondition: Boolean constant true (id_29[au](1): boolean)
 EndCondition: Boolean constant true (id_29[au](1): boolean)
 ExitCondition: Boolean constant false (id_27[au](0): boolean)
 InvariantCondition: Boolean constant true (id_29[au](1): boolean)
 PreCondition: Boolean constant true (id_29[au](1): boolean)
 PostCondition: (id_73[au](1): ((id_75[au](5): ArrayElement: a4 (id_31[au](Array: [5, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>]): array)[IntegerValue (id_79[au](0): int)]) == RealValue (id_81[au](5): real)))
 RepeatCondition: Boolean constant false (id_27[au](0): boolean)
 ActionCompleteCondition: Root ack (id_67[au](1): boolean)
 AbortCompleteCondition: Root abortComplete (id_69[iu](UNKNOWN): boolean)
 a4: a4 (id_31[au](Array: [5, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>]): array)
}

[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:step][2:0] State change queue: Root 
[PlexilExec:step][2:0:0] Transitioning node Root from EXECUTING to ITERATION_ENDED
[PlexilExec:step][2:1] State change queue: Root 
[PlexilExec:step][2:1:0] Transitioning node Root from ITERATION_ENDED to FINISHED
[Node:outcome]Outcome of 'Root' is SUCCESS
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
Root{
 State: Root (id_21[au](FINISHED): state) (0)
 Outcome: Root (id_23[au](SUCCESS): outcome)
 a4: a4 (id_31[iu](Array: [5, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>, <unknown>]): array)
}



[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[Test:testOutput]Creating initial state WheelStuck() = 0
[Test:testOutput]Creating initial state time() = 0
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 0
[PlexilExec:cycle]==>Start cycle 1
[PlexilExec:step][1:0] State change queue: Root 
[PlexilExec:step][1:0:0] Transitioning node Root from INACTIVE to WAITING
[PlexilExec:step][1:1] State change queue: Root 
[PlexilExec:step][1:1:0] Transitioning node Root from WAITING to EXECUTING
[Test:testOutput]Executing callSomeCommand() into noId with ack Root command_handle (id_55[au](UNKNOWN): command_handle)
[PlexilExec:cycle]==>End cycle 1
[PlexilExec:printPlan]
Root{
 State: Root (id_14[au](EXECUTING): state) (0)
 AncestorEndCondition: Boolean constant false (id_20[au](0): boolean)
 AncestorExitCondition: Boolean constant false (id_20[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_22[au](1): boolean)
 SkipCondition: Boolean constant false (id_20[au](0): boolean)
 StartCondition: Boolean constant true (id_22[au](1): boolean)
 EndCondition: Boolean constant true (id_22[au](1): boolean)
 ExitCondition: Boolean constant false (id_20[au](0): boolean)
 InvariantCondition: Boolean constant true (id_22[au](1): boolean)
 PreCondition: Boolean constant true (id_22[au](1): boolean)
 PostCondition: Boolean constant true (id_22[au](1): boolean)
 RepeatCondition: Boolean constant false (id_20[au](0): boolean)
 ActionCompleteCondition: (id_59[iu](UNKNOWN): isknown(Root command_handle (id_55[au](UNKNOWN): command_handle)))
 AbortCompleteCondition: Root abortComplete (id_57[au](UNKNOWN): boolean)
 Command handle: Root command_handle (id_55[au](UNKNOWN): command_handle)
}

[Test:testOutput]Processing event: time() = 1
[PlexilExec:cycle]==>Start cycle 2
[PlexilExec:step][2:0] State change queue: Root 
[PlexilExec:step][2:0:0] Transitioning node Root from EXECUTING to FINISHING
[PlexilExec:cycle]==>End cycle 2
[PlexilExec:printPlan]
Root{
 State: Root (id_14[au](FINISHING): state) (1)
 AncestorEndCondition: Boolean constant false (id_20[au](0): boolean)
 AncestorExitCondition: Boolean constant false (id_20[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_22[au](1): boolean)
 SkipCondition: Boolean constant false (id_20[au](0): boolean)
 StartCondition: Boolean constant true (id_22[au](1): boolean)
 EndCondition: Boolean constant true (id_22[au](1): boolean)
 ExitCondition: Boolean constant false (id_20[au](0): boolean)
 InvariantCondition: Boolean constant true (id_22[au](1): boolean)
 PreCondition: Boolean constant true (id_22[au](1): boolean)
 PostCondition: Boolean constant true (id_22[au](1): boolean)
 RepeatCondition: Boolean constant false (id_20[au](0): boolean)
 ActionCompleteCondition: (id_59[au](0): isknown(Root command_handle (id_55[au](UNKNOWN): command_handle)))
 AbortCompleteCondition: Root abortComplete (id_57[au](UNKNOWN): boolean)
 Command handle: Root command_handle (id_55[au](UNKNOWN): command_handle)
}

[Test:testOutput]Processing event: time() = 2
[PlexilExec:cycle]==>Start cycle 3
[PlexilExec:cycle]==>End cycle 3
[PlexilExec:printPlan]
Root{
 State: Root (id_14[au](FINISHING): state) (1)
 AncestorEndCondition: Boolean constant false (id_20[au](0): boolean)
 AncestorExitCondition: Boolean constant false (id_20[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_22[au](1): boolean)
 SkipCondition: Boolean constant false (id_20[au](0): boolean)
 StartCondition: Boolean constant true (id_22[au](1): boolean)
 EndCondition: Boolean constant true (id_22[au](1): boolean)
 ExitCondition: Boolean constant false (id_20[au](0): boolean)
 InvariantCondition: Boolean constant true (id_22[au](1): boolean)
 PreCondition: Boolean constant true (id_22[au](1): boolean)
 PostCondition: Boolean constant true (id_22[au](1): boolean)
 RepeatCondition: Boolean constant false (id_20[au](0): boolean)
 ActionCompleteCondition: (id_59[au](0): isknown(Root command_handle (id_55[au](UNKNOWN): command_handle)))
 AbortCompleteCondition: Root abortComplete (id_57[au](UNKNOWN): boolean)
 Command handle: Root command_handle (id_55[au](UNKNOWN): command_handle)
}

[Test:testOutput]Processing event: time() = 3
[PlexilExec:cycle]==>Start cycle 4
[PlexilExec:cycle]==>End cycle 4
[PlexilExec:printPlan]
Root{
 State: Root (id_14[au](FINISHING): state) (1)
 AncestorEndCondition: Boolean constant false (id_20[au](0): boolean)
 AncestorExitCondition: Boolean constant false (id_20[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_22[au](1): boolean)
 SkipCondition: Boolean constant false (id_20[au](0): boolean)
 StartCondition: Boolean constant true (id_22[au](1): boolean)
 EndCondition: Boolean constant true (id_22[au](1): boolean)
 ExitCondition: Boolean constant false (id_20[au](0): boolean)
 InvariantCondition: Boolean constant true (id_22[au](1): boolean)
 PreCondition: Boolean constant true (id_22[au](1): boolean)
 PostCondition: Boolean constant true (id_22[au](1): boolean)
 RepeatCondition: Boolean constant false (id_20[au](0): boolean)
 ActionCompleteCondition: (id_59[au](0): isknown(Root command_handle (id_55[au](UNKNOWN): command_handle)))
 AbortCompleteCondition: Root abortComplete (id_57[au](UNKNOWN): boolean)
 Command handle: Root command_handle (id_55[au](UNKNOWN): command_handle)
}

[Test:testOutput]Processing event: time() = 4
[PlexilExec:cycle]==>Start cycle 5
[PlexilExec:cycle]==>End cycle 5
[PlexilExec:printPlan]
Root{
 State: Root (id_14[au](FINISHING): state) (1)
 AncestorEndCondition: Boolean constant false (id_20[au](0): boolean)
 AncestorExitCondition: Boolean constant false (id_20[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_22[au](1): boolean)
 SkipCondition: Boolean constant false (id_20[au](0): boolean)
 StartCondition: Boolean constant true (id_22[au](1): boolean)
 EndCondition: Boolean constant true (id_22[au](1): boolean)
 ExitCondition: Boolean constant false (id_20[au](0): boolean)
 InvariantCondition: Boolean constant true (id_22[au](1): boolean)
 PreCondition: Boolean constant true (id_22[au](1): boolean)
 PostCondition: Boolean constant true (id_22[au](1): boolean)
 RepeatCondition: Boolean constant false (id_20[au](0): boolean)
 ActionCompleteCondition: (id_59[au](0): isknown(Root command_handle (id_55[au](UNKNOWN): command_handle)))
 AbortCompleteCondition: Root abortComplete (id_57[au](UNKNOWN): boolean)
 Command handle: Root command_handle (id_55[au](UNKNOWN): command_handle)
}

[Test:testOutput]Processing event: time() = 5
[PlexilExec:cycle]==>Start cycle 6
[PlexilExec:cycle]==>End cycle 6
[PlexilExec:printPlan]
Root{
 State: Root (id_14[au](FINISHING): state) (1)
 AncestorEndCondition: Boolean constant false (id_20[au](0): boolean)
 AncestorExitCondition: Boolean constant false (id_20[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_22[au](1): boolean)
 SkipCondition: Boolean constant false (id_20[au](0): boolean)
 StartCondition: Boolean constant true (id_22[au](1): boolean)
 EndCondition: Boolean constant true (id_22[au](1): boolean)
 ExitCondition: Boolean constant false (id_20[au](0): boolean)
 InvariantCondition: Boolean constant true (id_22[au](1): boolean)
 PreCondition: Boolean constant true (id_22[au](1): boolean)
 PostCondition: Boolean constant true (id_22[au](1): boolean)
 RepeatCondition: Boolean constant false (id_20[au](0): boolean)
 ActionCompleteCondition: (id_59[au](0): isknown(Root command_handle (id_55[au](UNKNOWN): command_handle)))
 AbortCompleteCondition: Root abortComplete (id_57[au](UNKNOWN): boolean)
 Command handle: Root command_handle (id_55[au](UNKNOWN): command_handle)
}

[Test:testOutput]Processing event: time() = 6
[PlexilExec:cycle]==>Start cycle 7
[PlexilExec:cycle]==>End cycle 7
[PlexilExec:printPlan]
Root{
 State: Root (id_14[au](FINISHING): state) (1)
 AncestorEndCondition: Boolean constant false (id_20[au](0): boolean)
 AncestorExitCondition: Boolean constant false (id_20[au](0): boolean)
 AncestorInvariantCondition: Boolean constant true (id_22[au](1): boolean)
 SkipCondition: Boolean constant false (id_20[au](0): boolean)
 StartCondition: Boolean constant true (id_22[au](1): boolean)
 EndCondition: Boolean constant true (id_22[au](1): boolean)
 ExitCondition: Boolean constant false (id_20[au](0): boolean)
 InvariantCondition: Boolean constant true (id_22[au](1): boolean)
 PreCondition: Boolean constant true (id_22[au](1): boolean)
 PostCondition: Boolean constant true (id_22[au](1): boolean)
 RepeatCondition: Boolean constant false (id_20[au](0): boolean)
 ActionCompleteCondition: (id_59[au](0): isknown(Root command_handle (id_55[au](UNKNOWN): command_handle)))
 AbortCompleteCondition: Root abortComplete (id_57[au](UNKNOWN): boolean)
 Command handle: Root command_handle (id_55[au](UNKNOWN): command_handle)
}

[Test:testOutput]Sending command ACK callSomeCommand() = (string)COMMAND_SUCCESS
[Test:testOutput]Looking up immediately time()
[Test:testOutput]Returning value 6
[PlexilExec:cycle]==>Start cycle 8
[PlexilExec:step][8:0] State change queue: Root 
[PlexilExec:step][8:0:0] Transitioning node Root from FINISHING to ITERATION_ENDED
[PlexilExec:step][8:1] State change queue: Root 
[PlexilExec:step][8:1:0] Transitioning node Root from ITERATION_ENDED to FINISHED
[Node:outcome]Outcome of 'Root' is SUCCESS
[PlexilExec:cycle]==>End cycle 8
[PlexilExec:printPlan]
Root{
 State: Root (id_14[au](FINISHED): state) (6)
 Outcome: Root (id_16[au](SUCCESS): outcome)
 Command handle: Root command_handle (id_55[iu](COMMAND_SUCCESS): command_handle)
}

